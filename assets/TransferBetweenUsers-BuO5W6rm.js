import{r as c,x as $,c as p,d as b,g as s,l as E,t as P,G as U,p as D,a as j,E as I,A as g,h as m,f as z,w as C,i as f,F as M}from"./index-hq2crXK7.js";import{A as N}from"./AccountDropdown-Cpq72yZ0.js";import{c as O,h as R,i as q,j as V,u as G,_ as w}from"./rules-CEdIoZ_B.js";import{p as K}from"./formatters-DwE89AP2.js";const Y={class:"mb-3"},Z=["for"],H=["id"],S={__name:"TextInput",props:{id:{type:String,required:!0},label:{type:String,required:!0},modelValue:{type:String,default:""}},emits:["update:modelValue"],setup(u,{emit:o}){const n=u,v=o,i=c(n.modelValue||"");$(()=>n.modelValue,r=>{i.value=r||""});const A=()=>{const r=i.value.trim();v("update:modelValue",r)};return(r,l)=>(b(),p("div",Y,[s("label",{for:u.id,class:"form-label"},P(u.label),9,Z),E(s("input",{id:u.id,type:"text",class:"form-control","onUpdate:modelValue":l[0]||(l[0]=d=>i.value=d),onBlur:A,placeholder:"Enter text"},null,40,H),[[U,i.value]])]))}},J=O({fromAccountIban:V,toAccountIban:V,amount:q,description:R().nullable()}),L={class:"d-flex flex-row justify-content-between"},Q=["disabled"],W={class:"mt-4"},X={key:0,class:"list-group"},tt=["disabled"],et={key:1,class:"text-center text-muted mt-3"},at={__name:"TransferBetweenUsers",props:{toast:Object},setup(u){const o=u,n=j(),{handleSubmit:v,meta:i,resetForm:A,setFieldValue:r}=G({validationSchema:J,initialValues:{fromAccountIban:"",toAccountIban:"",amount:"",description:""},validateOnMount:!0}),l=c(""),d=c(""),y=c([]),_=c([]),h=c(!1),x=c(0);async function T(){h.value=!1;const e=await I.get(g.accountsByName(l.value,d.value),{headers:{Authorization:`Bearer ${n.token}`}});h.value=!0,e.status===200?(y.value=e.data,await F()):o.toast.setToast("Failed to fetch IBANs. Please try again.","error")}async function F(){try{const e=await I.get(g.checkingAccountsById(n.user.id),{headers:{Authorization:`Bearer ${n.token}`}});_.value=e.data}catch{o.toast.setToast("Error getting your accounts. Please try again.","error")}}function k(){return!(l.value&&d.value)}const B=v(async e=>{if(!e.fromAccountIban){o.toast.setToast("Please select an IBAN to transfer from.","error");return}try{const t={sourceAccount:e.fromAccountIban,targetAccount:e.toAccountIban,amount:K(e.amount),description:e.description||null};(await I.post(g.transactions,t,{headers:{Authorization:`Bearer ${n.token}`}})).status===201?(o.toast.setToast("Transaction created successfully!","success"),A(),x.value++):o.toast.setToast("Failed to create transaction. Please try again.","error")}catch{o.toast.setToast("An error occurred while creating the transaction.","error")}});return(e,t)=>(b(),p(M,null,[t[5]||(t[5]=s("h1",{class:"h2 text-center"},"Find IBAN",-1)),s("div",null,[s("div",L,[m(S,{id:"firstName",label:"Enter first name",modelValue:l.value,"onUpdate:modelValue":t[0]||(t[0]=a=>l.value=a)},null,8,["modelValue"]),m(S,{id:"lastName",label:"Enter last name",modelValue:d.value,"onUpdate:modelValue":t[1]||(t[1]=a=>d.value=a)},null,8,["modelValue"])]),s("button",{class:"btn btn-primary mt-3 w-100",onClick:T,disabled:k()},"Find IBAN",8,Q)]),s("div",W,[y.value.length?(b(),p("div",X,[(b(),p("form",{key:x.value,onSubmit:t[4]||(t[4]=C((...a)=>f(B)&&f(B)(...a),["prevent"])),class:"d-flex flex-column gap-2"},[m(N,{accounts:_.value,label:"Select your account:","onUpdate:selectedAccount":t[2]||(t[2]=a=>f(r)("fromAccountIban",a?a.iban:""))},null,8,["accounts"]),m(N,{accounts:y.value,label:"IBANs found:","onUpdate:selectedAccount":t[3]||(t[3]=a=>f(r)("toAccountIban",a?a.iban:"")),balanceVisible:!1},null,8,["accounts"]),m(w,{name:"amount",label:"Amount to Transfer",type:"currency"}),m(w,{name:"description",label:"Description"}),s("button",{class:"btn btn-primary",type:"submit",disabled:!f(i).valid},"Transfer",8,tt)],32))])):h.value?(b(),p("div",et," No IBANs found for the given name. ")):z("",!0)])],64))}},lt=D(at,[["__scopeId","data-v-2922a372"]]);export{lt as F,J as t};
